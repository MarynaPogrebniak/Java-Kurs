package homework_55;

import java.util.List;

public class MinEven3 {

    // Найти минимальное чётное число в последовательности положительных чисел или
    // вывести -1, если такого числа не существует.
    //
    // Оценить временную и пространственную сложность алгоритма.

    // В нашем методе нет коллекций (массивов, списков, строк, множеств, словарей)
    // и вызова других методов
    // - значит, space - O(1) - (дополнительная память этого метода, а не память всей программы)
    // при этом для вызова метода потребуется O(n) памяти - нужно передать туда ссылку на список

    // Есть цикл - time - O(n)
    // Нет вложенных циклов, операций с коллекциями и вызова других методов - значит, time - O(n)
    public static int firstIndexOfMinEven(List<Integer> numbers) {
        int result = -1; // мы не нашли ни одного чётного числа
        int minEven = -1; // сюда можно написать всё что угодно - мы всё равно перезапишем

        for (int i = 0; i < numbers.size(); ++i) {
            int x = numbers.get(i);
            // x - чётное и (чётных не было или x меньше предыдущих)
            if (x % 2 == 0 && (minEven == -1 || x < minEven)) {
                minEven = x; // новый минимум
                result = i; // ответ (индекс)
            }
        }

        return result;
    }
}
