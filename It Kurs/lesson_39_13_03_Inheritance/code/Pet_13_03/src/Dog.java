
// extends - "расширяет"
// класс Собака расширяет уже существующий класс ДомашнееЖивотное,
// дополняя его новым функционалом

// класс Dog - класс-наследник или класс-потомок
//   (child class)
// класс Pet - базовый класс, класс-родитель, класс-предок или суперкласс
//   (parent class / super class)
public class Dog extends Pet {

  // у наследника ОБЯЗАТЕЛЬНО должен быть конструктор, который вызывает конструктор родителя
  public Dog(String name, String dateOfBirth, double weight) {
    // конструктор родителя (и вообще сам родитель) доступны через служебное слово super
    super(name, dateOfBirth, weight);
  }

  public void bringShoes() {
    // получить доступ к приватным членам родительского класса нельзя из класса-потомка
    // private - доступен только в самом классе
    // default - доступен в рамках одного пакета
    // protected - как default, но доступен потомкам даже за пределами пакета
    weight -= 0.001;
    System.out.println(getName() + ": Собаки могут носить тапочки. А могут и не носить...");
  }
}
